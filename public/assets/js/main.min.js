var listsContainer=document.querySelector(".lists"),btnCreateList=document.querySelector("#btnCreateList"),tbCreateList=document.querySelector("#tbCreateList"),modalsDiv=document.querySelector("#modals");const showAllLists=async()=>{try{const{data:{lists:e,message:a}}=await axios.get("/api/v1/lists");var t="";e?e.forEach((e=>{t+=renderList(e._id,e.name,e.tasks),renderModal(e._id,"list","deleteList")})):t+=`<h3 class="w-auto m-auto text-black-50 text-center">${a}</h3>`,listsContainer.innerHTML=t}catch(t){console.log(t)}};function renderList(t,e,a){var s=!!a.length,i=`<div class='col'>\n    <div class="card h-100">\n        <div class="card-header bg-dark text-white" id="list-${t}">\n            <div id="list-header-${t}" class="row justify-content-between mx-0 px-0">\n                <p class='col-auto mb-0 px-0' ondblclick="editList('${t}')">${e}</p>\n                <span class='col-auto'>\n                <i class="icon bi bi-plus-circle addBtn" data-searchbar="searchbar-create-task-${t}" onclick="showSearchBar(this)"></i>\n                <i class="icon bi bi-pen editBtn" data-searchbar="searchbar-edit-list-${t}" onclick="showSearchBar(this)"></i>\n                <i class="icon bi bi-trash3 deleteBtn" data-bs-toggle="modal" data-bs-target="#modal-${t}"></i>\n                </span>\n            </div>\n\n            <div id="searchbar-edit-list-${t}" class="input-group input-group-sm d-none">\n                <input type="text" id='tb-edit-list-${t}' class="form-control form-control-sm" value='${e}' maxlength="20"/>\n                <input type="button" id="btn-edit-list-${t}" class="btn btn-primary" value="Apply" for-tb-input="tb-edit-list-${t}" onclick="editList('${t}')">\n            </div>\n\n            <div id="searchbar-create-task-${t}" class="input-group input-group-sm d-none">\n                <input type="text" id="tb-create-task-${t}" class="form-control form-control-sm" maxlength="20" placeholder='Add new task...'/>\n                <input type="button" id="btn-create-task-${t}" value="Create" class="btn btn-primary" onclick="createTask('${t}')">\n            </div>\n        </div>\n        <div class="card-body bg-dark-subtle">`;return s?a.forEach((t=>{i+=renderTasks(t)})):i+='<h6 class="card-subtitle">This list is empty</h6>',i+="</div></div></div>"}function renderTasks(t){var e=t.isCompleted,a=`<div id="task-header-${t._id}" class='row justify-content-between mx-0 px-0'>`;return a+=e?`\n        <div class="form-check col-auto">\n            <input class="form-check-input task" type="checkbox" value="${t._id}" id="task-${t._id}" onchange="isCompleted(this), editTask(this, ${e})" checked>\n            <label id="task-label-${t._id}" class="form-check-label completed-task" for="task-${t._id}">\n            ${t.title}\n            </label>\n        </div>`:`\n        <div class="form-check col-auto">\n            <input class="form-check-input task" type="checkbox" value="${t._id}" id="task-${t._id}" onchange="editTask(this, ${e}), isCompleted(this)">\n            <label id="task-label-${t._id}" class="form-check-label" for="task-${t._id}">\n            ${t.title}\n            </label>\n        </div>`,a+=`\n            <span class='col-auto'>\n                <i class="icon bi bi-pen editBtn" data-searchbar="searchbar-update-task-${t._id}" onclick="showSearchBar(this)"></i>\n                <i class="icon bi bi-trash3 deleteBtn" data-bs-toggle="modal" data-bs-target="#modal-${t._id}"></i>\n            </span>\n        </div>\n        <div id="searchbar-update-task-${t._id}" class="input-group input-group-sm d-none">\n            <input type="text" id="tb-update-task-${t._id}" class="form-control form-control-sm" value="${t.title}" maxlength="20"/>\n            <input type="button" id="btn-update-task-${t._id}" value="Apply" class="btn btn-primary" onclick="editTaskTitle('${t._id}')">\n        </div>`,renderModal(t._id,"task","deleteTask"),a}function showSearchBar(t){var e=t.dataset.searchbar,a=e.split("-").pop();["list-header-"+a,"searchbar-edit-list-"+a,"searchbar-create-task-"+a,"task-header-"+a,"searchbar-update-task-"+a].forEach((t=>{if(t==e)document.querySelector(`#${e}`).classList.remove("d-none");else{var a=document.querySelector(`#${t}`);a&&a.classList.add("d-none")}}))}function isCompleted(t){t.checked?t.nextElementSibling.classList.add("completed-task"):t.nextElementSibling.classList.remove("completed-task")}showAllLists();const createList=async()=>{try{var t=tbCreateList.value;if(""!=t){var e={name:t};await axios.post("/api/v1/lists",e),showAllLists(),document.querySelector("#tbCreateList").value=""}}catch(t){console.log(t)}},deleteList=async t=>{try{var e=t;await axios.delete(`/api/v1/lists/${e}`),showAllLists()}catch(t){console.log(t)}},editList=async t=>{try{var e=document.querySelector(`#list-${t} p`),a=document.querySelector(`#tb-edit-list-${t}`),s=e.innerHTML,i=a.value;if(s!=i&&""!=i){var l=t,n={name:i};await axios.patch(`/api/v1/lists/${l}`,n),showAllLists()}else document.querySelector(`#list-header-${t}`).classList.remove("d-none"),a.parentElement.classList.add("d-none")}catch(t){console.log(t)}},createTask=async t=>{try{var e=document.querySelector(`#tb-create-task-${t}`),a=e.value;if(""!=a){var s={title:a,list:t};await axios.post("api/v1/tasks",s),showAllLists()}else document.querySelector(`#list-header-${t}`).classList.remove("d-none"),e.parentElement.classList.add("d-none")}catch(t){console.log(t)}},deleteTask=async t=>{try{var e=t;await axios.delete(`/api/v1/tasks/${e}`),showAllLists()}catch(t){console.log(t)}},editTask=async(t,e)=>{try{var a=t.checked;if(e!=a){var s=t.value,i={isCompleted:a};await axios.patch(`/api/v1/tasks/${s}`,i),showAllLists()}}catch(t){console.log(t)}},editTaskTitle=async t=>{try{var e=document.querySelector(`#task-label-${t}`),a=document.querySelector(`#tb-update-task-${t}`),s=e.innerHTML.trim(),i=a.value.trim();if(s!=i&&""!=i){var l=t,n={title:i};await axios.patch(`/api/v1/tasks/${l}`,n),showAllLists()}else e.parentElement.parentElement.classList.remove("d-none"),a.parentElement.classList.add("d-none")}catch(t){console.log(t)}};function renderModal(t,e,a){var s=`<div class="modal fade" id="modal-${t}" tabindex="-1" aria-labelledby="modal-${t}-label" aria-hidden="true">\n    <div class="modal-dialog modal-dialog-centered">\n      <div class="modal-content">\n        <div class="modal-header">\n          <h1 class="modal-title fs-5" id="modal-${t}-label">Confirm your action</h1>\n          <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>\n        </div>\n        <div class="modal-body">\n            Are you sure you want to delete this ${e}?\n        </div>\n        <div class="modal-footer">\n        <button type="button" class="btn btn-primary" onclick="${a}('${t}')" data-bs-dismiss="modal">Yes</button>\n        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>`;modalsDiv.innerHTML+=s}btnCreateList.addEventListener("click",(()=>{createList()}));